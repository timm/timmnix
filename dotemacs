; -*- lisp -*-
(setq ispell-program-name "/usr/local/bin/ispell")

(print 2)

;(load "~/quicklisp/setup.lisp")
;(load (expand-file-name "~/.local/opt/quicklisp/slime-helper.el"))

(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("marmalade" . "https://marmalade-repo.org/packages/")
                         ("melpa" . "http://melpa.org/packages/")))

(when (>= emacs-major-version 24)
  (require 'package)
  (add-to-list
   'package-archives
   '("melpa" . "http://melpa.org/packages/")
   t)
  (package-initialize))


    (setq tab-width 2) 

(add-to-list 'load-path "~/gits/timm/timmnix/")

(setq c-default-style '((java-mode . "java")
                        (awk-mode . "awk")
                        (other . "linux-tabs-only")))
                        
(setq ; control awk mode
 awk-mode-hook
 (function (lambda ()
	 (setq c-basic-offset 2)
	 (c-toggle-electric-state -1)
	 )))
         
;; (require 'lua-block)
;;  (lua-block-mode t)
;;  (defun lua-block-goto-corresponding-point ()
;;   "Jump to corresponding point."
;;   (interactive)
;;   (goto-char (lua-block-get-corresponding-point)))

;; (add-hook 'lua-mode-hook (lambda ()
;;                  (local-set-key (kbd "C-c C-b")
;;                         'lua-block-goto-corresponding-point)))

(autoload 'markdown-mode "markdown-mode"
   "Major mode for editing Markdown files" t)
(add-to-list 'auto-mode-alist '("\\.text\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))

(setq lua-indent-level 2)

(defun markdown-regexp-right (beg end)
  (interactive "r")
  (replace-regexp "-\|[^-]" "-:|\n" nil beg end)    
  (replace-regexp "-\+-" "-|-" nil beg end)
)

;(defun ask-user-about-supersession-threat (fn)
 ; "blatantly ignore files that changed on disk"
 ; )


;(setq inferior-lisp-program "/usr/local/bin/sbcl")
;(require 'slime)
(add-to-list 'load-path "/usr/local/bin")
(add-hook 'lisp-mode-hook (lambda () (slime-mode t)))
(add-hook 'inferior-lisp-mode-hook (lambda () (inferior-slime-mode t)))
;; Optionally, specify the lisp program you are using. Default is "lisp"
(setq inferior-lisp-program "/usr/local/bin/sbcl")



